extends ../layout
append head
    script(src='/bootstrap/js/d3.v3.min.js')
    style.
      svg {
        font: 10px sans-serif;
      }

      .axis path,
      .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }

      .x.axis path {
        display: none;
      }

      .line {
        fill: none;
        stroke: steelblue;
        stroke-width: 1.5px;
      }

block content
    p CONTENT ON GRAPH.JADE
    script.
      var margin = {top: 20, right: 20, bottom: 30, left: 50},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

      var parseDate = d3.time.format("%m/%d/%Y %H:%M:%S").parse;

      var x = d3.time.scale()
          .range([0, width]);

      var y = d3.scale.linear()
          .range([height, 0]);

      var xAxis = d3.svg.axis()
          .scale(x)
          .orient("bottom");

      var yAxis = d3.svg.axis()
          .scale(y)
          .orient("left");

      var line = d3.svg.line()
          .x(function(d) { return x(d.datetime); })
          .y(function(d) { return y(d.temp); });

      var svg = d3.select("body").append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
        .append("g")
          .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      //var myjson = #{tempdata}
      //json = JSON.parse(myjson);

      d3.json("https://[::1]:3000/graph/getJSON", function(error, data) {
          //data.sort(function(a,b) {return d3.ascending(a.datetime, b.datetime);});
          data.forEach(function(d) {
              d.datetime = new Date(d.time);
              d.temp = +d.temperature;
        });

        x.domain(d3.extent(data, function(d) { return d.datetime; }));
        y.domain(d3.extent(data, function(d) { return d.temp; }));

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);

        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
          .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .text("Temperature (â„ƒ)");

        svg.append("path")
            .datum(data)
            .attr("class", "line")
            .attr("d", line);
      });
    p CONTENT ON GRAPH.JADE
    each val, key in tempdata
        li= val.temperature
  //for (var k in tempdata)
  //  each temperature, record in tempdata[k]
  //    li #{temperature}: #{record}
  //each temperature, record in tempdata
  //  li #{temperature}: #{record}
  //each val, key in tempdata
  //    li #{val}: #{key}
  //each record in tempdata
  //    li= record
  //for (var k in data)
  //  each val, key in data[k]
  //    p #{key}: #{val}
  //      if(key == 'value')
  //        each val2, key2 in val
  //          p #{key2}: #{val2}